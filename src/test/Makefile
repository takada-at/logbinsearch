# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = $(HOME)/src/gtest-1.7.0
PYTHON_DIR = $(HOME)/include/python2.7

# Where to find user code.
USER_DIR = ..

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include -I$(PYTHON_DIR) -I$(USER_DIR) -g -O0

# Flags passed to the C++ compiler.
#CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
BUILDDIR = build
TESTS = $(BUILDDIR)/bz2search_test

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) $(BUILDDIR)/gtest.a $(BUILDDIR)/gtest_main.a $(BUILDDIR)/*.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

$(BUILDDIR) :
	mkdir $(BUILDDIR)
# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
$(BUILDDIR)/gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc -o $@

$(BUILDDIR)/gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc -o $@

$(BUILDDIR)/gtest.a : $(BUILDDIR)/gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

$(BUILDDIR)/gtest_main.a : $(BUILDDIR)/gtest-all.o $(BUILDDIR)/gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# bz2search.o : $(USER_DIR)/bz2search.c $(USER_DIR)/microbunzip.h $(GTEST_HEADERS)
# 	$(CC) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/bz2search.c

$(BUILDDIR)/microbunzip.o : $(USER_DIR)/bz2search.c $(GTEST_HEADERS)
	$(CC) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/microbunzip.c -o $@

# bz2search_test.o : $(USER_DIR)/test/bz2search_test.cc \
#                      $(USER_DIR)/microbunzip.h $(GTEST_HEADERS)
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/test/bz2search_test.cc

# bz2search_test : bz2search.o microbunzip.o bz2search_test.o gtest_main.a
# 	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpython -lpthread $^ -o $@

$(BUILDDIR)/bz2search_test : $(BUILDDIR)/gtest_main.a $(BUILDDIR)/microbunzip.o
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpython -lpthread bz2search_test.cc $^ -o $@

